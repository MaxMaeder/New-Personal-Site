---
interface Props {
  id?: string;
  /**
   * The text to display
   */
  text: string;
  /**
   * If provided, the component renders as a link (<a>). 
   * Example: "/about" or "https://example.com"
   */
  href?: string;
  target?: "_blank"
}

const { id, text, href, target } = Astro.props;
const isLink = !!href;
---

<style>
.button {
  font-weight: bold;
  font-size: 1rem;
  background: none;
  border: none;
  padding: 0;

  color: var(--text-primary-color);
  text-decoration: none;
  cursor: pointer;

  display: inline-flex;
  align-items: center;
  position: relative;
}

.button :global(svg) {
  display: inline-block;
  width: 1em;
  height: auto;
  vertical-align: middle;
  margin-left: 0.25rem;
}

.button::after {
  content: "";
  position: absolute;
  left: 0;
  bottom: -2px;
  width: 0%;
  height: 2px;
  background: currentColor;
  transition: width 0.3s ease-out;
}

@media (hover: hover) {
  .button:hover::after {
    width: 100%;
  }
}
</style>

{isLink ? (
  <a id={id} class="button" href={href} target={target}>
    {text}
    <slot class="svg-icon" />
  </a>
) : (
  <button 
    id={id}
    class="button" 
    type="button"
  >
    {text}
    <slot class="svg-icon" />
  </button>
)}
